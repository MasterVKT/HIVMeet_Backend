# Generated by Django 5.0.1 on 2025-06-12 14:25

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SubscriptionPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "plan_id",
                    models.CharField(
                        help_text="Unique identifier for the plan (e.g., hivmeet_monthly)",
                        max_length=50,
                        unique=True,
                        verbose_name="Plan ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "name_en",
                    models.CharField(max_length=100, verbose_name="Name (English)"),
                ),
                (
                    "name_fr",
                    models.CharField(max_length=100, verbose_name="Name (French)"),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "description_en",
                    models.TextField(verbose_name="Description (English)"),
                ),
                (
                    "description_fr",
                    models.TextField(verbose_name="Description (French)"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Price",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="EUR", max_length=3, verbose_name="Currency"
                    ),
                ),
                (
                    "billing_interval",
                    models.CharField(
                        choices=[("month", "Monthly"), ("year", "Yearly")],
                        max_length=10,
                        verbose_name="Billing interval",
                    ),
                ),
                (
                    "trial_period_days",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Trial period (days)"
                    ),
                ),
                (
                    "unlimited_likes",
                    models.BooleanField(default=True, verbose_name="Unlimited likes"),
                ),
                (
                    "can_see_likers",
                    models.BooleanField(
                        default=True, verbose_name="Can see who liked them"
                    ),
                ),
                (
                    "can_rewind",
                    models.BooleanField(
                        default=True, verbose_name="Can rewind last swipe"
                    ),
                ),
                (
                    "monthly_boosts_count",
                    models.PositiveIntegerField(
                        default=1, verbose_name="Monthly boosts count"
                    ),
                ),
                (
                    "daily_super_likes_count",
                    models.PositiveIntegerField(
                        default=5, verbose_name="Daily super likes count"
                    ),
                ),
                (
                    "media_messaging_enabled",
                    models.BooleanField(
                        default=True, verbose_name="Media messaging enabled"
                    ),
                ),
                (
                    "audio_video_calls_enabled",
                    models.BooleanField(
                        default=True, verbose_name="Audio/video calls enabled"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Display order"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
            ],
            options={
                "verbose_name": "Subscription plan",
                "verbose_name_plural": "Subscription plans",
                "db_table": "subscription_plans",
                "ordering": ["order", "price"],
            },
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "subscription_id",
                    models.CharField(
                        help_text="External subscription ID from payment provider",
                        max_length=100,
                        unique=True,
                        verbose_name="Subscription ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("active", "Active"),
                            ("trialing", "Trialing"),
                            ("past_due", "Past due"),
                            ("canceled", "Canceled"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "current_period_start",
                    models.DateTimeField(verbose_name="Current period start"),
                ),
                (
                    "current_period_end",
                    models.DateTimeField(verbose_name="Current period end"),
                ),
                (
                    "trial_end",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Trial end"
                    ),
                ),
                (
                    "auto_renew",
                    models.BooleanField(default=True, verbose_name="Auto-renew"),
                ),
                (
                    "cancel_at_period_end",
                    models.BooleanField(
                        default=False, verbose_name="Cancel at period end"
                    ),
                ),
                (
                    "canceled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Canceled at"
                    ),
                ),
                (
                    "cancellation_reason",
                    models.TextField(blank=True, verbose_name="Cancellation reason"),
                ),
                (
                    "boosts_remaining",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Boosts remaining"
                    ),
                ),
                (
                    "super_likes_remaining",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Super likes remaining"
                    ),
                ),
                (
                    "last_boosts_reset",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Last boosts reset",
                    ),
                ),
                (
                    "last_super_likes_reset",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Last super likes reset",
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Payment method"
                    ),
                ),
                (
                    "last_payment_attempt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last payment attempt"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscription",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="subscriptions",
                        to="subscriptions.subscriptionplan",
                        verbose_name="Plan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subscription",
                "verbose_name_plural": "Subscriptions",
                "db_table": "subscriptions",
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        help_text="External transaction ID from payment provider",
                        max_length=100,
                        unique=True,
                        verbose_name="Transaction ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("purchase", "Purchase"),
                            ("renewal", "Renewal"),
                            ("refund", "Refund"),
                        ],
                        max_length=20,
                        verbose_name="Type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("succeeded", "Succeeded"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Amount",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="EUR", max_length=3, verbose_name="Currency"
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Payment method"
                    ),
                ),
                (
                    "provider_response",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Raw response from payment provider",
                        verbose_name="Provider response",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Error message"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "subscription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="subscriptions.subscription",
                        verbose_name="Subscription",
                    ),
                ),
            ],
            options={
                "verbose_name": "Transaction",
                "verbose_name_plural": "Transactions",
                "db_table": "subscription_transactions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WebhookEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "event_id",
                    models.CharField(
                        help_text="External event ID from payment provider",
                        max_length=100,
                        unique=True,
                        verbose_name="Event ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(max_length=50, verbose_name="Event type"),
                ),
                (
                    "payload",
                    models.JSONField(
                        help_text="Raw webhook payload", verbose_name="Payload"
                    ),
                ),
                (
                    "processed",
                    models.BooleanField(default=False, verbose_name="Processed"),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Processed at"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Error message"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
            ],
            options={
                "verbose_name": "Webhook event",
                "verbose_name_plural": "Webhook events",
                "db_table": "webhook_events",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["processed", "created_at"],
                        name="webhook_eve_process_8c85e6_idx",
                    ),
                    models.Index(
                        fields=["event_type", "created_at"],
                        name="webhook_eve_event_t_54b761_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="subscription",
            index=models.Index(
                fields=["status", "current_period_end"],
                name="subscriptio_status_302dc0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="subscription",
            index=models.Index(
                fields=["user", "status"], name="subscriptio_user_id_8d58fd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["subscription", "-created_at"],
                name="subscriptio_subscri_c5aa06_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["status", "type"], name="subscriptio_status_bdfcc9_idx"
            ),
        ),
    ]
