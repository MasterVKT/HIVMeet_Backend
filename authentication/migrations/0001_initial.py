# Generated by Django 5.0.1 on 2025-06-09 01:50

import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "firebase_uid",
                    models.CharField(
                        blank=True,
                        help_text="Firebase Authentication UID",
                        max_length=128,
                        null=True,
                        unique=True,
                        verbose_name="Firebase UID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email address"
                    ),
                ),
                (
                    "email_verified",
                    models.BooleanField(default=False, verbose_name="Email verified"),
                ),
                (
                    "display_name",
                    models.CharField(
                        help_text="Public display name (3-30 characters)",
                        max_length=30,
                        verbose_name="Display name",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        help_text="Must be 18+ years old", verbose_name="Birth date"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="International format",
                        max_length=20,
                        null=True,
                        verbose_name="Phone number",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active.",
                        verbose_name="Active",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into the admin site.",
                        verbose_name="Staff status",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Identity and medical status verified",
                        verbose_name="Verified",
                    ),
                ),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("not_started", "Not started"),
                            ("pending", "Pending"),
                            ("verified", "Verified"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                        ],
                        default="not_started",
                        max_length=20,
                        verbose_name="Verification status",
                    ),
                ),
                (
                    "is_premium",
                    models.BooleanField(default=False, verbose_name="Premium status"),
                ),
                (
                    "premium_until",
                    models.DateTimeField(
                        blank=True,
                        help_text="Premium subscription expiry date",
                        null=True,
                        verbose_name="Premium until",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Date joined"
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last login"
                    ),
                ),
                (
                    "last_active",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Last active"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("user", "User"),
                            ("moderator", "Moderator"),
                            ("admin", "Admin"),
                        ],
                        default="user",
                        max_length=20,
                        verbose_name="Role",
                    ),
                ),
                (
                    "fcm_tokens",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Firebase Cloud Messaging tokens for push notifications",
                        verbose_name="FCM tokens",
                    ),
                ),
                (
                    "notification_settings",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Notification settings"
                    ),
                ),
                (
                    "blocked_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="blocked_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Blocked users",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "users",
                "indexes": [
                    models.Index(fields=["email"], name="users_email_4b85f2_idx"),
                    models.Index(
                        fields=["firebase_uid"], name="users_firebas_361636_idx"
                    ),
                    models.Index(
                        fields=["is_verified", "last_active"],
                        name="users_is_veri_39a942_idx",
                    ),
                    models.Index(
                        fields=["is_premium"], name="users_is_prem_41b83a_idx"
                    ),
                    models.Index(
                        fields=["verification_status"], name="users_verific_ff7924_idx"
                    ),
                ],
            },
        ),
    ]
