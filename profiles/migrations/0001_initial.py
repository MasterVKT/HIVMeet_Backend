# Generated by Django 5.0.1 on 2025-06-09 22:10

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="Tell us about yourself (max 500 characters)",
                        max_length=500,
                        verbose_name="Bio",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("non_binary", "Non-binary"),
                            ("trans_male", "Trans male"),
                            ("trans_female", "Trans female"),
                            ("other", "Other"),
                            ("prefer_not_to_say", "Prefer not to say"),
                        ],
                        default="prefer_not_to_say",
                        max_length=20,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        max_digits=10,
                        null=True,
                        verbose_name="Latitude",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        max_digits=10,
                        null=True,
                        verbose_name="Longitude",
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="City"),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Country"
                    ),
                ),
                (
                    "hide_exact_location",
                    models.BooleanField(
                        default=False, verbose_name="Hide exact location"
                    ),
                ),
                (
                    "interests",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        default=list,
                        size=3,
                        verbose_name="Interests",
                    ),
                ),
                (
                    "relationship_types_sought",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("friendship", "Friendship"),
                                ("long_term", "Long-term relationship"),
                                ("short_term", "Short-term relationship"),
                                ("casual", "Casual dating"),
                            ],
                            max_length=20,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                        verbose_name="Types of relationships sought",
                    ),
                ),
                (
                    "age_min_preference",
                    models.IntegerField(
                        default=18,
                        validators=[
                            django.core.validators.MinValueValidator(18),
                            django.core.validators.MaxValueValidator(99),
                        ],
                        verbose_name="Minimum age preference",
                    ),
                ),
                (
                    "age_max_preference",
                    models.IntegerField(
                        default=99,
                        validators=[
                            django.core.validators.MinValueValidator(18),
                            django.core.validators.MaxValueValidator(99),
                        ],
                        verbose_name="Maximum age preference",
                    ),
                ),
                (
                    "distance_max_km",
                    models.IntegerField(
                        default=25,
                        validators=[
                            django.core.validators.MinValueValidator(5),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Maximum distance (km)",
                    ),
                ),
                (
                    "genders_sought",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("male", "Male"),
                                ("female", "Female"),
                                ("non_binary", "Non-binary"),
                                ("trans_male", "Trans male"),
                                ("trans_female", "Trans female"),
                                ("other", "Other"),
                                ("prefer_not_to_say", "Prefer not to say"),
                            ],
                            max_length=20,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                        verbose_name="Gender preferences",
                    ),
                ),
                (
                    "is_hidden",
                    models.BooleanField(default=False, verbose_name="Profile hidden"),
                ),
                (
                    "show_online_status",
                    models.BooleanField(
                        default=True, verbose_name="Show online status"
                    ),
                ),
                (
                    "allow_profile_in_discovery",
                    models.BooleanField(
                        default=True, verbose_name="Allow profile in discovery"
                    ),
                ),
                (
                    "profile_views",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Profile views"
                    ),
                ),
                (
                    "likes_received",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Likes received"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Profile",
                "verbose_name_plural": "Profiles",
                "db_table": "profiles",
            },
        ),
        migrations.CreateModel(
            name="ProfilePhoto",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "photo_url",
                    models.URLField(max_length=500, verbose_name="Photo URL"),
                ),
                (
                    "thumbnail_url",
                    models.URLField(max_length=500, verbose_name="Thumbnail URL"),
                ),
                (
                    "is_main",
                    models.BooleanField(default=False, verbose_name="Is main photo"),
                ),
                (
                    "caption",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Caption"
                    ),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Display order"
                    ),
                ),
                (
                    "is_approved",
                    models.BooleanField(default=True, verbose_name="Is approved"),
                ),
                (
                    "moderation_notes",
                    models.TextField(blank=True, verbose_name="Moderation notes"),
                ),
                (
                    "uploaded_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Uploaded at"),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Profile Photo",
                "verbose_name_plural": "Profile Photos",
                "db_table": "profile_photos",
                "ordering": ["order", "-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="Verification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "id_document_path",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="ID document path"
                    ),
                ),
                (
                    "medical_document_path",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Medical document path"
                    ),
                ),
                (
                    "selfie_path",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Selfie path"
                    ),
                ),
                (
                    "verification_code",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Verification code"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("not_started", "Not started"),
                            ("pending_id", "Pending ID verification"),
                            ("pending_medical", "Pending medical verification"),
                            ("pending_selfie", "Pending selfie verification"),
                            ("pending_review", "Pending review"),
                            ("verified", "Verified"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                        ],
                        default="not_started",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "rejection_reason",
                    models.TextField(blank=True, verbose_name="Rejection reason"),
                ),
                (
                    "submitted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Submitted at"
                    ),
                ),
                (
                    "reviewed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Reviewed at"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Expires at"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verifications_reviewed",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Reviewed by",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="verification",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Verification",
                "verbose_name_plural": "Verifications",
                "db_table": "verifications",
            },
        ),
        migrations.AddIndex(
            model_name="profile",
            index=models.Index(
                fields=["city", "country"], name="profiles_city_90b13a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="profile",
            index=models.Index(
                fields=["is_hidden", "allow_profile_in_discovery"],
                name="profiles_is_hidd_a65626_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="profilephoto",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_main", True)),
                fields=("profile",),
                name="unique_main_photo_per_profile",
            ),
        ),
        migrations.AddIndex(
            model_name="verification",
            index=models.Index(fields=["status"], name="verificatio_status_40629d_idx"),
        ),
        migrations.AddIndex(
            model_name="verification",
            index=models.Index(
                fields=["expires_at"], name="verificatio_expires_5cc4bf_idx"
            ),
        ),
    ]
