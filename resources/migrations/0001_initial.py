# Generated by Django 5.0.1 on 2025-06-12 01:53

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "name_en",
                    models.CharField(max_length=100, verbose_name="Name (English)"),
                ),
                (
                    "name_fr",
                    models.CharField(max_length=100, verbose_name="Name (French)"),
                ),
                (
                    "slug",
                    models.SlugField(max_length=100, unique=True, verbose_name="Slug"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, verbose_name="Description (English)"),
                ),
                (
                    "description_fr",
                    models.TextField(blank=True, verbose_name="Description (French)"),
                ),
                (
                    "icon_url",
                    models.URLField(
                        blank=True, max_length=500, verbose_name="Icon URL"
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Display order"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "is_premium_only",
                    models.BooleanField(default=False, verbose_name="Premium only"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="resources.category",
                        verbose_name="Parent category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "db_table": "resource_categories",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="FeedPost",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("content", models.TextField(max_length=500, verbose_name="Content")),
                (
                    "image_url",
                    models.URLField(
                        blank=True, max_length=500, verbose_name="Image URL"
                    ),
                ),
                (
                    "tags",
                    models.JSONField(blank=True, default=list, verbose_name="Tags"),
                ),
                (
                    "allow_comments",
                    models.BooleanField(default=True, verbose_name="Allow comments"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending moderation"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                (
                    "moderation_notes",
                    models.TextField(blank=True, verbose_name="Moderation notes"),
                ),
                (
                    "moderated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Moderated at"
                    ),
                ),
                (
                    "like_count",
                    models.PositiveIntegerField(default=0, verbose_name="Like count"),
                ),
                (
                    "comment_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Comment count"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feed_posts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Author",
                    ),
                ),
                (
                    "moderated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="posts_moderated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Moderated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Feed Post",
                "verbose_name_plural": "Feed Posts",
                "db_table": "feed_posts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FeedPostComment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("content", models.TextField(max_length=200, verbose_name="Content")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending moderation"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="approved",
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feed_comments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Author",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="resources.feedpost",
                        verbose_name="Post",
                    ),
                ),
            ],
            options={
                "verbose_name": "Feed Post Comment",
                "verbose_name_plural": "Feed Post Comments",
                "db_table": "feed_post_comments",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="FeedPostLike",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="resources.feedpost",
                        verbose_name="Post",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feed_likes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Feed Post Like",
                "verbose_name_plural": "Feed Post Likes",
                "db_table": "feed_post_likes",
            },
        ),
        migrations.CreateModel(
            name="Resource",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Title")),
                (
                    "title_en",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Title (English)"
                    ),
                ),
                (
                    "title_fr",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Title (French)"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(max_length=200, unique=True, verbose_name="Slug"),
                ),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("article", "Article"),
                            ("video", "Video"),
                            ("link", "External link"),
                            ("contact", "Contact/Organization"),
                        ],
                        max_length=10,
                        verbose_name="Resource type",
                    ),
                ),
                ("content", models.TextField(blank=True, verbose_name="Content")),
                (
                    "content_en",
                    models.TextField(blank=True, verbose_name="Content (English)"),
                ),
                (
                    "content_fr",
                    models.TextField(blank=True, verbose_name="Content (French)"),
                ),
                (
                    "summary",
                    models.TextField(
                        blank=True, max_length=500, verbose_name="Summary"
                    ),
                ),
                (
                    "summary_en",
                    models.TextField(
                        blank=True, max_length=500, verbose_name="Summary (English)"
                    ),
                ),
                (
                    "summary_fr",
                    models.TextField(
                        blank=True, max_length=500, verbose_name="Summary (French)"
                    ),
                ),
                (
                    "thumbnail_url",
                    models.URLField(
                        blank=True, max_length=500, verbose_name="Thumbnail URL"
                    ),
                ),
                (
                    "main_image_url",
                    models.URLField(
                        blank=True, max_length=500, verbose_name="Main image URL"
                    ),
                ),
                (
                    "external_link",
                    models.URLField(
                        blank=True, max_length=500, verbose_name="External link"
                    ),
                ),
                (
                    "video_url",
                    models.URLField(
                        blank=True, max_length=500, verbose_name="Video URL"
                    ),
                ),
                (
                    "tags",
                    models.JSONField(blank=True, default=list, verbose_name="Tags"),
                ),
                (
                    "author_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Author name"
                    ),
                ),
                (
                    "source_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Source name"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[("fr", "French"), ("en", "English")],
                        default="fr",
                        max_length=2,
                        verbose_name="Primary language",
                    ),
                ),
                (
                    "available_languages",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Available languages"
                    ),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="Is published"),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Is featured"),
                ),
                (
                    "is_premium",
                    models.BooleanField(default=False, verbose_name="Premium only"),
                ),
                (
                    "is_verified_expert",
                    models.BooleanField(
                        default=False, verbose_name="Verified by expert"
                    ),
                ),
                (
                    "publication_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Publication date",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "view_count",
                    models.PositiveIntegerField(default=0, verbose_name="View count"),
                ),
                (
                    "estimated_read_time",
                    models.PositiveIntegerField(
                        default=5, verbose_name="Estimated read time (minutes)"
                    ),
                ),
                (
                    "contact_info",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Contact information"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resources",
                        to="resources.category",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Resource",
                "verbose_name_plural": "Resources",
                "db_table": "resources",
                "ordering": ["-publication_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ResourceFavorite",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorited_by",
                        to="resources.resource",
                        verbose_name="Resource",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resource_favorites",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Resource Favorite",
                "verbose_name_plural": "Resource Favorites",
                "db_table": "resource_favorites",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="feedpost",
            index=models.Index(
                fields=["author", "status"], name="feed_posts_author__697262_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedpost",
            index=models.Index(
                fields=["status", "-created_at"], name="feed_posts_status_c24531_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedpost",
            index=models.Index(fields=["tags"], name="feed_posts_tags_e69cd1_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="feedpostlike",
            unique_together={("post", "user")},
        ),
        migrations.AddIndex(
            model_name="resource",
            index=models.Index(
                fields=["resource_type", "is_published"],
                name="resources_resourc_1b6e23_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="resource",
            index=models.Index(
                fields=["category", "is_published"], name="resources_categor_1b7196_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="resource",
            index=models.Index(
                fields=["is_featured", "-publication_date"],
                name="resources_is_feat_225910_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="resource",
            index=models.Index(fields=["tags"], name="resources_tags_4c6c22_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="resourcefavorite",
            unique_together={("user", "resource")},
        ),
    ]
