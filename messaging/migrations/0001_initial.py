# Generated by Django 5.0.1 on 2025-06-11 04:41

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("matching", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client_message_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Client message ID"
                    ),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("image", "Image"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("call_log", "Call log"),
                        ],
                        default="text",
                        max_length=10,
                        verbose_name="Message type",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        blank=True,
                        max_length=1000,
                        validators=[django.core.validators.MaxLengthValidator(1000)],
                        verbose_name="Content",
                    ),
                ),
                (
                    "media_url",
                    models.URLField(
                        blank=True, max_length=500, verbose_name="Media URL"
                    ),
                ),
                (
                    "media_thumbnail_url",
                    models.URLField(
                        blank=True, max_length=500, verbose_name="Media thumbnail URL"
                    ),
                ),
                (
                    "media_file_path",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Media file path"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("sending", "Sending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("read", "Read"),
                            ("failed", "Failed"),
                        ],
                        default="sent",
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Delivered at"
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Read at"),
                ),
                (
                    "is_deleted_by_sender",
                    models.BooleanField(
                        default=False, verbose_name="Deleted by sender"
                    ),
                ),
                (
                    "is_deleted_by_recipient",
                    models.BooleanField(
                        default=False, verbose_name="Deleted by recipient"
                    ),
                ),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="matching.match",
                        verbose_name="Match",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages_sent",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Sender",
                    ),
                ),
            ],
            options={
                "verbose_name": "Message",
                "verbose_name_plural": "Messages",
                "db_table": "messages",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MessageReaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("emoji", models.CharField(max_length=10, verbose_name="Emoji")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reactions",
                        to="messaging.message",
                        verbose_name="Message",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="message_reactions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Message Reaction",
                "verbose_name_plural": "Message Reactions",
                "db_table": "message_reactions",
            },
        ),
        migrations.CreateModel(
            name="TypingIndicator",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "is_typing",
                    models.BooleanField(default=True, verbose_name="Is typing"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="typing_indicators",
                        to="matching.match",
                        verbose_name="Match",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="typing_indicators",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Typing Indicator",
                "verbose_name_plural": "Typing Indicators",
                "db_table": "typing_indicators",
            },
        ),
        migrations.CreateModel(
            name="Call",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "call_type",
                    models.CharField(
                        choices=[("audio", "Audio"), ("video", "Video")],
                        max_length=10,
                        verbose_name="Call type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("initiated", "Initiated"),
                            ("ringing", "Ringing"),
                            ("answered", "Answered"),
                            ("ended", "Ended"),
                            ("declined", "Declined"),
                            ("missed", "Missed"),
                            ("failed", "Failed"),
                        ],
                        default="initiated",
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                ("offer_sdp", models.TextField(blank=True, verbose_name="Offer SDP")),
                ("answer_sdp", models.TextField(blank=True, verbose_name="Answer SDP")),
                (
                    "ice_candidates",
                    models.JSONField(
                        blank=True, default=list, verbose_name="ICE candidates"
                    ),
                ),
                (
                    "initiated_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Initiated at"
                    ),
                ),
                (
                    "answered_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Answered at"
                    ),
                ),
                (
                    "ended_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Ended at"
                    ),
                ),
                (
                    "duration_seconds",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Duration (seconds)"
                    ),
                ),
                (
                    "end_reason",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="End reason"
                    ),
                ),
                (
                    "callee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calls_received",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Callee",
                    ),
                ),
                (
                    "caller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calls_initiated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Caller",
                    ),
                ),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calls",
                        to="matching.match",
                        verbose_name="Match",
                    ),
                ),
            ],
            options={
                "verbose_name": "Call",
                "verbose_name_plural": "Calls",
                "db_table": "calls",
                "ordering": ["-initiated_at"],
                "indexes": [
                    models.Index(
                        fields=["match", "-initiated_at"],
                        name="calls_match_i_aae67c_idx",
                    ),
                    models.Index(
                        fields=["caller", "-initiated_at"],
                        name="calls_caller__2618ac_idx",
                    ),
                    models.Index(
                        fields=["callee", "-initiated_at"],
                        name="calls_callee__93f282_idx",
                    ),
                    models.Index(fields=["status"], name="calls_status_de57eb_idx"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(
                fields=["match", "-created_at"], name="messages_match_i_25e232_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(
                fields=["sender", "-created_at"], name="messages_sender__7375e3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(fields=["status"], name="messages_status_72d01d_idx"),
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(
                fields=["client_message_id"], name="messages_client__b9809d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="messagereaction",
            unique_together={("message", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="typingindicator",
            unique_together={("match", "user")},
        ),
    ]
