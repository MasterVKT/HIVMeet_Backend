# Generated by Django 5.0.1 on 2025-06-11 04:41

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Boost",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Started at"),
                ),
                ("expires_at", models.DateTimeField(verbose_name="Expires at")),
                (
                    "views_gained",
                    models.PositiveIntegerField(default=0, verbose_name="Views gained"),
                ),
                (
                    "likes_gained",
                    models.PositiveIntegerField(default=0, verbose_name="Likes gained"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="boosts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Boost",
                "verbose_name_plural": "Boosts",
                "db_table": "boosts",
                "indexes": [
                    models.Index(
                        fields=["user", "-started_at"], name="boosts_user_id_c52447_idx"
                    ),
                    models.Index(
                        fields=["expires_at"], name="boosts_expires_ded348_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="DailyLikeLimit",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Date"
                    ),
                ),
                (
                    "likes_count",
                    models.PositiveIntegerField(default=0, verbose_name="Likes count"),
                ),
                (
                    "super_likes_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Super likes count"
                    ),
                ),
                (
                    "rewinds_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Rewinds count"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_like_limits",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Daily Like Limit",
                "verbose_name_plural": "Daily Like Limits",
                "db_table": "daily_like_limits",
                "indexes": [
                    models.Index(
                        fields=["user", "date"], name="daily_like__user_id_0204da_idx"
                    )
                ],
                "unique_together": {("user", "date")},
            },
        ),
        migrations.CreateModel(
            name="Dislike",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                ("expires_at", models.DateTimeField(verbose_name="Expires at")),
                (
                    "from_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dislikes_sent",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="From user",
                    ),
                ),
                (
                    "to_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dislikes_received",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="To user",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dislike",
                "verbose_name_plural": "Dislikes",
                "db_table": "dislikes",
                "indexes": [
                    models.Index(
                        fields=["from_user", "expires_at"],
                        name="dislikes_from_us_d967be_idx",
                    ),
                    models.Index(
                        fields=["expires_at"], name="dislikes_expires_78c94c_idx"
                    ),
                ],
                "unique_together": {("from_user", "to_user")},
            },
        ),
        migrations.CreateModel(
            name="Like",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "like_type",
                    models.CharField(
                        choices=[("regular", "Regular like"), ("super", "Super like")],
                        default="regular",
                        max_length=10,
                        verbose_name="Like type",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "from_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes_sent",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="From user",
                    ),
                ),
                (
                    "to_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes_received",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="To user",
                    ),
                ),
            ],
            options={
                "verbose_name": "Like",
                "verbose_name_plural": "Likes",
                "db_table": "likes",
                "indexes": [
                    models.Index(
                        fields=["from_user", "created_at"],
                        name="likes_from_us_c6a54f_idx",
                    ),
                    models.Index(
                        fields=["to_user", "created_at"],
                        name="likes_to_user_5cbba5_idx",
                    ),
                    models.Index(fields=["like_type"], name="likes_like_ty_6577cb_idx"),
                ],
                "unique_together": {("from_user", "to_user")},
            },
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("blocked", "Blocked"),
                            ("deleted", "Deleted"),
                        ],
                        default="active",
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                (
                    "last_message_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last message at"
                    ),
                ),
                (
                    "last_message_preview",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Last message preview"
                    ),
                ),
                (
                    "user1_unread_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="User 1 unread count"
                    ),
                ),
                (
                    "user2_unread_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="User 2 unread count"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "user1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches_as_user1",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User 1",
                    ),
                ),
                (
                    "user2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches_as_user2",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User 2",
                    ),
                ),
            ],
            options={
                "verbose_name": "Match",
                "verbose_name_plural": "Matches",
                "db_table": "matches",
                "indexes": [
                    models.Index(
                        fields=["user1", "status", "-last_message_at"],
                        name="matches_user1_i_5acf57_idx",
                    ),
                    models.Index(
                        fields=["user2", "status", "-last_message_at"],
                        name="matches_user2_i_727ce0_idx",
                    ),
                    models.Index(
                        fields=["status", "-created_at"],
                        name="matches_status_d87aa1_idx",
                    ),
                ],
                "unique_together": {("user1", "user2")},
            },
        ),
        migrations.CreateModel(
            name="ProfileView",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "viewed_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Viewed at"),
                ),
                (
                    "viewed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile_views_received",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Viewed",
                    ),
                ),
                (
                    "viewer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile_views_sent",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Viewer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Profile View",
                "verbose_name_plural": "Profile Views",
                "db_table": "profile_views",
                "indexes": [
                    models.Index(
                        fields=["viewer", "-viewed_at"],
                        name="profile_vie_viewer__cc977a_idx",
                    ),
                    models.Index(
                        fields=["viewed", "-viewed_at"],
                        name="profile_vie_viewed__ead7e7_idx",
                    ),
                ],
            },
        ),
    ]
